name: 🔍 Inspección Pasiva de Gateway

on:
  workflow_dispatch:
    inputs:
      dominio:
        description: 'Dominio o IP para analizar'
        required: true
        default: 'juice-shop.herokuapp.com'

jobs:
  analisis-superficie:
    name: Análisis Pasivo de Superficie de Borde
    runs-on: ubuntu-latest

    steps:
      - name: 📝 Preparar objetivo
        run: echo "${{ github.event.inputs.dominio }}" > objetivos.txt

      - name: 🌐 Ejecutar httpx y capturar datos
        run: |
          httpx -l objetivos.txt -title -tech-detect -tls-grab -json -no-color -silent > salida_httpx.json || echo "[]" > salida_httpx.json
          cat salida_httpx.json > logs_gatewayinspector.txt

      - name: 🧠 Extraer mejor tecnología para CVE (con fallbacks)
        id: tecnologia
        run: |
          tecnologia=$(jq -r '.[0] |
            .webserver // 
            .cdn_name // 
            .tls.issuer_cn // 
            .tls.subject_cn // 
            .tls.subject_dn // 
            .tls.subject_org[0] // 
            .title // 
            .content_type // 
            .url // 
            empty' salida_httpx.json)

          if [ -z "$tecnologia" ]; then
            tecnologia="unknown"
          fi

          echo "tecnologia_detectada=$tecnologia" >> $GITHUB_ENV
          echo "💡 Tecnología detectada (fallback aplicado si necesario): $tecnologia"

      - name: 🔍 Buscar CVEs usando CIRCL
        run: |
          version="${{ env.tecnologia_detectada }}"
          echo "🔍 Consultando CVEs en: https://cve.circl.lu/api/search/$version"
          if [ "$version" != "unknown" ]; then
            curl -s "https://cve.circl.lu/api/search/$version" | jq . > cves_detectados.json || echo "{}" > cves_detectados.json
          else
            echo "{}" > cves_detectados.json
          fi

      - name: 📋 Checklist de tecnologías detectadas
        run: |
          echo "### Checklist de Tecnologías Detectadas" >> logs_gatewayinspector.txt
          for tech in waf ingress gateway tls nginx kubernetes apache modsecurity cloudflare haproxy envoy fortinet checkpoint aws f5 paloalto; do
            resultado=$(grep -i "$tech" salida_httpx.json || true)
            if [ -n "$resultado" ]; then
              echo "- $tech: ✅" >> logs_gatewayinspector.txt
            else
              echo "- $tech: ❌" >> logs_gatewayinspector.txt
            fi
          done

      - name: 📦 Mostrar resultado del análisis
        run: |
          echo "📝 Resultado del Análisis:"
          echo ""
          cat salida_httpx.json
          echo ""
          echo "Tecnología usada para búsqueda de CVE: ${{ env.tecnologia_detectada }}"
          echo ""
          cat cves_detectados.json
          echo ""
          echo "📋 Checklist final de tecnologías:"
          cat logs_gatewayinspector.txt

      # - name: 🧪 Escaneo opcional con Nuclei (futuro)
      #   run: |
      #     nuclei -l objetivos.txt -t cves/ -json -o nuclei_output.json
