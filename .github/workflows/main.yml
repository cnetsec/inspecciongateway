name: 🔍 Inspección Pasiva de Gateway

on:
  workflow_dispatch:
    inputs:
      dominio:
        description: 'Dominio o IP objetivo (sin https://)'
        required: true

jobs:
  inspeccion-pasiva:
    runs-on: ubuntu-latest

    steps:
      - name: 🧭 Clonar repositorio
        uses: actions/checkout@v4

      - name: 🔧 Instalar dependencias
        run: |
          sudo apt update
          sudo apt install -y whatweb jq curl unzip
          wget https://github.com/projectdiscovery/httpx/releases/latest/download/httpx_amd64.tar.gz
          tar -xvzf httpx_amd64.tar.gz
          chmod +x httpx
          sudo mv httpx /usr/local/bin/

      - name: 📄 Salvar dominio de entrada
        run: |
          echo "${{ inputs.dominio }}" | tr -d '[:space:]' | sed 's|http[s]*://||' > objetivos.txt

      - name: ⚙️ Executar httpx
        run: |
          httpx -l objetivos.txt -title -tech-detect -tls-grab -json -no-color -silent > salida_httpx.json || echo "[]" > salida_httpx.json

      - name: 🌐 Executar whatweb
        run: |
          dominio=$(cat objetivos.txt)
          whatweb --no-errors "https://$dominio" > salida_whatweb.txt || echo "error" > salida_whatweb.txt

      - name: 🧠 Extrair tecnologia detectada
        id: tecnologia
        run: |
          tecnologia=$(jq -r '.[0].webserver // .[0].cdn_name // .[0].tls.issuer_cn // .[0].tls.subject_cn // empty' salida_httpx.json | head -n 1)
          if [[ -z "$tecnologia" ]]; then
            tecnologia="desconocida"
          fi
          echo "💡 Tecnología detectada: $tecnologia"
          echo "tecnologia=$tecnologia" >> $GITHUB_OUTPUT

      - name: 🔍 Consultar CVEs com CIRCL
        if: ${{ steps.tecnologia.outputs.tecnologia != 'desconocida' }}
        id: cvecheck
        run: |
          tecnologia="${{ steps.tecnologia.outputs.tecnologia }}"
          cve_json=$(curl -s "https://cve.circl.lu/api/search/$tecnologia")
          echo "$cve_json" | jq '.' > salida_cve.json || echo "{}" > salida_cve.json
          has_cve=$(echo "$cve_json" | jq 'if .results then (.results | length > 0) else false end')
          echo "has_cve=$has_cve" >> $GITHUB_OUTPUT

      - name: 🧪 Avaliar se é Gateway ou passa por Gateway
        id: gateway
        run: |
          headers=$(curl -s -I "https://${{ inputs.dominio }}" || true)
          if echo "$headers" | grep -iE "x-forwarded-for|via|cf-ray|x-amzn-trace-id"; then
            echo "passa_gateway=true" >> $GITHUB_OUTPUT
          else
            echo "passa_gateway=false" >> $GITHUB_OUTPUT
          fi

          if echo "$headers" | grep -iE "cloudflare|akamai|fortinet|aws|api-gateway|f5|modsecurity|waf"; then
            echo "e_gateway=true" >> $GITHUB_OUTPUT
          else
            echo "e_gateway=false" >> $GITHUB_OUTPUT
          fi

          if echo "$headers" | grep -i "tls"; then
            echo "has_tls=true" >> $GITHUB_OUTPUT
          else
            echo "has_tls=false" >> $GITHUB_OUTPUT
          fi

      - name: ✅ Checklist Final de Seguridad
        run: |
          echo "### 🛡️ Checklist Final de Seguridad" > logs_gatewayinspector.txt
          echo "- 🌐 Tecnología detectada: ${{ steps.tecnologia.outputs.tecnologia }}" >> logs_gatewayinspector.txt
          echo "- 🔐 ¿Es un Gateway de Seguridad?: ${{ steps.gateway.outputs.e_gateway == 'true' && '✅' || '❌' }}" >> logs_gatewayinspector.txt
          echo "- ➡️ ¿Pasa por Gateway de Seguridad?: ${{ steps.gateway.outputs.passa_gateway == 'true' && '✅' || '❌' }}" >> logs_gatewayinspector.txt
          echo "- 🔓 ¿No pasa por Gateway de Seguridad?: ${{ steps.gateway.outputs.passa_gateway == 'false' && '✅' || '❌' }}" >> logs_gatewayinspector.txt
          echo "- 📄 ¿Tiene CVEs asociados?: ${{ steps.cvecheck.outputs.has_cve == 'true' && '✅' || '❌' }}" >> logs_gatewayinspector.txt
          echo "- 🔒 ¿Tiene TLS activo?: ${{ steps.gateway.outputs.has_tls == 'true' && '✅' || '❌' }}" >> logs_gatewayinspector.txt

          cat logs_gatewayinspector.txt

      - name: 📦 Subir resultados como artefato
        uses: actions/upload-artifact@v4
        with:
          name: resultados-inspecciongateway
          path: |
            salida_httpx.json
            salida_whatweb.txt
            salida_cve.json
            logs_gatewayinspector.txt
