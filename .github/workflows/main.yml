name: 🔍 Inspección Pasiva de Gateway

on:
  workflow_dispatch:
    inputs:
      dominio:
        description: '🌐 Dominio a inspeccionar (ej: ejemplo.com)'
        required: true

jobs:
  inspeccion-pasiva:
    runs-on: ubuntu-latest
    name: 🌐 Inspección Pasiva
    steps:

      - name: ⬇️ Checkout del repositorio
        uses: actions/checkout@v4

      - name: ⚙️ Instalar dependencias necessárias
        run: |
          sudo apt-get update
          sudo apt-get install -y jq unzip curl whatweb

          # Instalação robusta do httpx
          curl -s https://api.github.com/repos/projectdiscovery/httpx/releases/latest \
            | jq -r '.assets[] | select(.name | test("httpx_.*_linux_amd64.zip")) | .browser_download_url' \
            | xargs curl -L -o httpx.zip
          unzip httpx.zip
          chmod +x httpx
          sudo mv httpx /usr/local/bin/httpx

          # Instalação robusta do Wappalyzer-Go (COM O HÍFEN CORRIGIDO)
          curl -s https://api.github.com/repos/projectdiscovery/wappalyzergo/releases/latest \
            | jq -r '.assets[] | select(.name | test("wappalyzergo-linux-amd64.zip")) | .browser_download_url' \
            | xargs curl -L -o wappalyzergo.zip
          unzip wappalyzergo.zip
          chmod +x wappalyzergo
          sudo mv wappalyzergo /usr/local/bin/wappalyzergo

      - name: 🌐 Ejecutar herramientas pasivas
        run: |
          echo "🔎 Dominio: ${{ inputs.dominio }}"
          
          echo "🧪 HTTPX:"
          httpx -silent -title -tls-probe -status-code -tech-detect -ip -location -web-server -cdn -json -u ${{ inputs.dominio }} > httpx_output.json
          cat httpx_output.json

          echo "🧪 WhatWeb:"
          whatweb ${{ inputs.dominio }} > whatweb_output.txt
          cat whatweb_output.txt

          echo "🧪 Wappalyzer CLI:"
          wappalyzergo -urls ${{ inputs.dominio }} > wappalyzer_output.json
          cat wappalyzer_output.json

      - name: 📄 Analizar headers y certificado SSL
        run: |
          echo "🔐 Headers y Certificados:"
          curl -s -D - https://${{ inputs.dominio }} -o /dev/null > headers_output.txt
          cat headers_output.txt
          
          echo | openssl s_client -servername ${{ inputs.dominio }} -connect ${{ inputs.dominio }}:443 2>/dev/null | openssl x509 -noout -text > cert_output.txt
          cat cert_output.txt

      - name: 🧠 Consolidar tecnologías detectadas
        id: tecnologias
        run: |
          TECNOLOGIAS=$(cat wappalyzer_output.json | jq -r '.[].technologies[].name' | sort -u | paste -sd "," -)
          echo "🧩 Tecnologías encontradas: $TECNOLOGIAS"
          echo "tecnologias=$TECNOLOGIAS" >> $GITHUB_OUTPUT

      - name: 🐞 Buscar CVEs en CIRCL para tecnologías detectadas
        run: |
          echo "🔍 Buscando CVEs relacionados..."
          IFS=',' read -ra TECNOS <<< "${{ steps.tecnologias.outputs.tecnologias }}"
          > cve_resultados.txt
          for TEC in "${TECNOS[@]}"; do
            echo "🔎 $TEC" >> cve_resultados.txt
            curl -s -L -f "https://cve.circl.lu/api/search/$TEC" | jq '.[] | select(.id != null) | "\(.id): \(.summary)"' >> cve_resultados.txt
            echo "---" >> cve_resultados.txt
          done
          cat cve_resultados.txt

      - name: ✅ Checklist Final (Español)
        run: |
          echo "📋 Checklist Final:"
          echo "Dominio: ${{ inputs.dominio }}"
          echo "---"
          echo "1. ¿Tecnología detectada? ✅"
          
          echo "2. ¿Es un Gateway de seguridad (WAF, API Gateway, Ingress)?"
          if grep -i -E 'cloudflare|akamai|imperva|fastly|aws|api gateway|nginx ingress' whatweb_output.txt || grep -i -E 'x-forwarded|via|cf-ray|akamai|x-amz' headers_output.txt; then
            echo "➡️  Posible Gateway de seguridad detectado ✅"
          else
            echo "❌ No se detectó Gateway de seguridad"
          fi

          echo "3. ¿Pasa por Gateway (x-forwarded, headers específicos)?"
          if grep -i -E 'x-forwarded|via|x-amz' headers_output.txt; then
            echo "✅ Evidencia de paso por Gateway"
          else
            echo "❌ No hay evidencia clara de paso por Gateway"
          fi

          echo "4. ¿Certificado válido y vigente?"
          if grep -q "Not After" cert_output.txt; then
            echo "✅ Certificado analizado"
          else
            echo "⚠️ No se obtuvo certificado"
          fi

          echo "5. ¿CVEs encontrados?"
          if grep -q "CVE-" cve_resultados.txt; then
            echo "⚠️ Hay CVEs asociados a las tecnologías detectadas"
          else
            echo "✅ No se encontraron CVEs relevantes"
          fi
