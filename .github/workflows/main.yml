name: 🔍 Inspección Pasiva de Gateway

on:
  workflow_dispatch:
    inputs:
      dominio:
        description: "🌐 Dominio o IP objetivo"
        required: true

jobs:
  inspeccion-pasiva:
    runs-on: ubuntu-latest

    steps:
      - name: ⬇️ Clonar repositorio
        uses: actions/checkout@v4

      - name: 🧰 Instalar dependencias necesarias
        run: |
          sudo apt update -y
          sudo apt install -y jq unzip curl whatweb

          # Fallback seguro para httpx (última versão válida conhecida)
          curl -LO https://github.com/projectdiscovery/httpx/releases/latest/download/httpx_amd64.tar.gz
          tar -xzf httpx_amd64.tar.gz
          chmod +x httpx
          sudo mv httpx /usr/local/bin/httpx

      - name: 🌐 Ejecutar httpx
        run: |
          echo "${{ github.event.inputs.dominio }}" > targets.txt
          httpx -silent -json -title -tech-detect -status-code -ip -o httpx_output.json -list targets.txt

      - name: 🔍 Ejecutar WhatWeb
        run: |
          whatweb -v ${{ github.event.inputs.dominio }} > whatweb_output.txt || echo "WhatWeb falló"

      - name: 📡 Obtener headers enriquecidos
        run: |
          curl -s -D - ${{ github.event.inputs.dominio }} -o /dev/null > headers.txt
          grep -iE 'server:|x-powered-by:|via:|x-forwarded-for|cdn|akamai|cloudflare|forti|aws|waf|nginx' headers.txt > enriched_headers.txt || true

      - name: 🧬 Buscar CVEs relacionados (CIRCL)
        run: |
          TECNOLOGIAS=$(jq -r '.[].technologies[]?.name' httpx_output.json | sort -u)
          > cve_results.txt
          for tech in $TECNOLOGIAS; do
            echo "🔍 Buscando CVEs para: $tech" >> cve_results.txt
            curl -s "https://cve.circl.lu/api/search/$tech" | jq -r '.data[]?.id' >> cve_results.txt || echo "❌ No se encontraron CVEs para $tech" >> cve_results.txt
          done

      - name: 📋 Generar checklist final
        run: |
          echo "## ✅ Informe de Inspección Pasiva de Gateway" > checklist.md
          echo "- 🔍 Dominio analizado: ${{ github.event.inputs.dominio }}" >> checklist.md
          echo "" >> checklist.md

          echo "### 🧠 Tecnologías Detectadas:" >> checklist.md
          jq -r '.[].technologies[]?.name' httpx_output.json | sort -u >> checklist.md
          echo "" >> checklist.md

          if grep -qi 'waf\|forti\|cloudflare\|akamai\|aws\|proxy' enriched_headers.txt; then
            echo "- ✅ Pasa por Gateway de Seguridad (WAF/API Gateway)" >> checklist.md
          else
            echo "- ⚠️ No pasa por Gateway de Seguridad" >> checklist.md
          fi

          if grep -qi 'nginx' enriched_headers.txt; then
            echo "- ✅ Posible Ingress Controller (NGINX)" >> checklist.md
          fi

          echo "" >> checklist.md
          if [ -s cve_results.txt ]; then
            echo "### 🛡️ CVEs Relacionados Encontrados:" >> checklist.md
            sort -u cve_results.txt >> checklist.md
          else
            echo "- ✅ No se encontraron CVEs conocidos en las tecnologías detectadas" >> checklist.md
          fi

          echo "" >> checklist.md
          echo "### ✅ Clasificación General:" >> checklist.md
          echo "- Tecnología detectada ✅" >> checklist.md
          grep -qi 'waf\|gateway' enriched_headers.txt && echo "- Es Gateway de Seguridad ✅" >> checklist.md || echo "- No es Gateway de Seguridad ❌" >> checklist.md
          grep -qi 'x-forwarded-for' enriched_headers.txt && echo "- Pasa por Gateway de Seguridad ✅" >> checklist.md || echo "- No pasa por Gateway de Seguridad ❌" >> checklist.md
          grep -qi 'nginx' enriched_headers.txt && echo "- Es un Ingress NGINX ✅" >> checklist.md

          echo "" >> checklist.md
          echo "🧾 Análisis completado." >> checklist.md

      - name: 📤 Subir artefactos
        uses: actions/upload-artifact@v4
        with:
          name: resultados-inspeccion
          path: |
            httpx_output.json
            whatweb_output.txt
            headers.txt
            enriched_headers.txt
            cve_results.txt
            checklist.md
